digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{NEURAL_NETWORK\n|+ alpha\l+ error\l+ gain\l+ input\l+ input_x\l+ input_y\l+ learning_rate\l+ Mean\l+ name\l+ nb_layers\l+ nb_total\l+ network\l+ output\l+ TestError\l+ TestErrorPredictingMean\l+ TrainError\l+ TrainErrorPredictingMean\l|}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="output\nerror\nMean\ninput\nlearning_rate\nalpha\nTrainError\nTestErrorPredictingMean\nTrainErrorPredictingMean\nTestError\n...",arrowtail="open",fontname="Helvetica"];
  Node2 [label="{double\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node3 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="input_x\ninput_y\nnb_total\nnb_layers",arrowtail="open",fontname="Helvetica"];
  Node3 [label="{int\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="network",arrowtail="open",fontname="Helvetica"];
  Node4 [label="{LIST\n|+ end\l+ nb_items\l+ nb_max_items\l+ start\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_l_i_s_t.html"];
  Node3 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="nb_max_items\nnb_items",arrowtail="open",fontname="Helvetica"];
  Node5 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="end\nstart",arrowtail="open",fontname="Helvetica"];
  Node5 [label="{LIST_NODE\n|+ destroy_func\l+ next\l+ prev\l+ ptr\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_l_i_s_t___n_o_d_e.html"];
  Node5 -> Node5 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="prev\nnext",arrowtail="open",fontname="Helvetica"];
  Node6 -> Node5 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="destroy_func",arrowtail="open",fontname="Helvetica"];
  Node6 [label="{void(*)(void *ptr)\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node7 -> Node5 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="ptr",arrowtail="open",fontname="Helvetica"];
  Node7 [label="{void *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="name",arrowtail="open",fontname="Helvetica"];
  Node8 [label="{char *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
